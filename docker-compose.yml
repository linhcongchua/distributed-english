version: '3.8'

networks:
  cdc-using-debezium-network:
    name: cdc-using-debezium-network
    driver: bridge
    external: false

services:
  english-postgres:
    build:
      context: z-docker
    container_name: english-postgres
    restart: always
    ports:
      - '5445:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_MULTIPLE_DATABASES="saga-orchestration-service","forum-service","notification-service","payment-service"
    command: [ "postgres", "-c", "wal_level=logical" ]
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - cdc-using-debezium-network

  english-kafka:
    image: bitnami/kafka
    container_name: english-kafka
    hostname: english-kafka
    restart: always
    ports:
      - '9092:9092'
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_KRAFT_CLUSTER_ID: q0k00yjQRaqWmAAAZv955w # base64 UUID
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_LISTENERS: INTERNAL://english-kafka:29092,CONTROLLER://english-kafka:29093,EXTERNAL://0.0.0.0:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://english-kafka:29092,EXTERNAL://localhost:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@english-kafka:29093
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
    networks:
      - cdc-using-debezium-network

  debezium-connect:
    image: debezium/connect
    container_name: debezium-connect
    hostname: debezium-connect
    restart: always
    ports:
      - '8083:8083'
    environment:
      BOOTSTRAP_SERVERS: english-kafka:29092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: 'false'
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: 'false'
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      ENABLE_DEBEZIUM_SCRIPTING: 'false'
    links:
      - english-postgres
      - english-kafka
    networks:
      - cdc-using-debezium-network
  redis:
    image: 'bitnami/redis:7.0'
    restart: always
    ports:
      - '16379:6379'
    environment:
      - REDIS_PASSWORD=redis_password
    networks:
      - cdc-using-debezium-network
    volumes:
      - redis_vol:/bitnami/redis/data
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    restart: always
    ports:
      - "4317"
      - "16686:16686"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - cdc-using-debezium-network
  opentelemetry-collector:
    container_name: opentelemetry_collector
    image: otel/opentelemetry-collector-contrib:0.91.0
    restart: always
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ./z-docker/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    ports:
      - "4317:4317" # OTLP gRPC receiver
    depends_on:
      - jaeger
    networks:
      - cdc-using-debezium-network

  mongodb:
    image: bitnami/mongodb
    restart: always
    environment:
      MONGODB_ROOT_USER: mongo
      MONGODB_ROOT_PASSWORD: admin
      MONGODB_DATABASE: "forum_flat"
    volumes:
      - mongo_vol:/bitnami/mongodb
    ports:
      - "27017:27017"
    networks:
      - cdc-using-debezium-network
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8091:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: admin
      ME_CONFIG_MONGODB_URL: mongodb://mongo:admin@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongodb
    networks:
      - cdc-using-debezium-network

volumes:
  db:
    name: postgres-distributed-english-data
    driver: local
  redis_vol:
    name: redis-distributed-english-data
    driver: local
  mongo_vol:
    name: mongo-forum-flat-distributed-english-data
    driver: local
